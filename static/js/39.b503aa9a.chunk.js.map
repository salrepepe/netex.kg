{"version":3,"sources":["assets/images/state/error-icon.svg","../node_modules/@mui/icons-material/Delete.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","assets/images/profile/lock.webp","assets/images/profile/avatarGallery.svg","pages/dashboard/Settings/Profile.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","_objectDestructuringEmpty","obj","TypeError","createSvgIcon","React","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","Profile","t","dispatch","useDispatch","history","useHistory","makeStyles","ProfileBlock","padding","breakpoints","down","ProfileBlockImg","margin","cursor","content","right","top","backgroundSize","transform","backgroundImage","avatarGallery","zIndex","ProfileInput","ProfileButton","marginTop","ProfileWarning","warningText","marginLeft","goOutButton","Dialog","DialogTitle","fontWeight","AvatarIcon","ButtonDelete","useStyles","domain","window","location","hostname","useLocation","useState","loading","setLoading","useSelector","MyProfileReducer","profileData","answerMyProfileAlert","setFile","profileDataList","data","profile","useLayoutEffect","severity","getProfileData","logout","removeAvatar","open","setOpen","handleClickOpen","key","handleClose","formik","useFormik","initialValues","firstname","lastname","phone","onSubmit","values","replace","editProfile","search","href","split","useEffect","setFieldValue","Reload","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","setMyProfile","alert","Alert","message","messages","Grid","container","spacing","item","xs","sm","md","lg","xl","Box","id","DialogActions","Button","size","onClick","style","textTransform","removeImgAvatar","onChange","event","target","files","length","file","URL","createObjectURL","FormData","append","postProfilePhoto","accept","htmlFor","IconButton","avatar","handleSubmit","TextField","label","handleChange","disabled","required","InputProps","inputComponent","MaskCustom","errorIcon","Typography","email","lock","old_password","new_password","confirm_password","resetForm","postChangePassword","render","field","form","marginBottom","cookie","removeSpecific","path","push","setTimeout","reload"],"mappings":"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","file":"static/js/39.b503aa9a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error-icon.3f933522.svg\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class is deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` is deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","export default __webpack_public_path__ + \"static/media/lock.8279a666.webp\";","export default __webpack_public_path__ + \"static/media/avatarGallery.7c4c2eb3.svg\";","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Grid,\n  IconButton,\n  makeStyles,\n  Snackbar,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Field, Form, Formik, useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport errorIcon from \"./../../../assets/images/state/error-icon.svg\";\nimport lock from \"./../../../assets/images/profile/lock.webp\";\nimport avatarGallery from \"./../../../assets/images/profile/avatarGallery.svg\";\nimport cookie from \"cookie_js\";\nimport {\n  editProfile,\n  getProfileData,\n  postChangePassword,\n  postProfilePhoto,\n  removeImgAvatar,\n  setMyProfile,\n} from \"../../../redux/reducers/myProfile\";\nimport { Alert } from \"@mui/material\";\nimport Reload from \"./../../../components/Reload\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useHistory } from \"react-router\";\nimport { MaskCustom } from \"../../../components/inputMask/unicalMask\";\nimport { useLocation } from \"react-router\";\n\nconst Profile = ({ t }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const useStyles = makeStyles((theme) => ({\n    ProfileBlock: {\n      padding: 24,\n      backgroundColor: \"#fff\",\n      borderRadius: 8,\n      height: \"100%\",\n      [theme.breakpoints.down(\"lg\")]: {\n        padding: 16,\n      },\n    },\n    ProfileBlockImg: {\n      width: 100,\n      height: 100,\n      borderRadius: 50,\n      textAlign: \"center\",\n      margin: \"0 auto\",\n      // marginBottom: 16,\n      cursor: \"pointer\",\n      display: \"block\",\n      position: \"relative\",\n      \"&::before\": {\n        content: `\"\" !important`,\n        position: \"absolute\",\n        width: 50,\n        height: 50,\n        right: \"50%\",\n        top: \"50%\",\n        backgroundSize: \"cover\",\n        transform: \"translate(50%, -50%)\",\n        backgroundImage: `url(${avatarGallery})`,\n        zIndex: 1,\n      },\n      \"&::after\": {\n        content: `\"\" !important`,\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        right: 0,\n        top: 0,\n        backgroundColor: `rgba(0,0,0, .4)`,\n      },\n    },\n    ProfileInput: {\n      backgroundColor: \"#F7F8F9\",\n      borderRadius: 8,\n      \"& input\": {\n        color: \"#64748B\",\n      },\n    },\n    ProfileButton: {\n      backgroundColor: \"#FCE34D\",\n      padding: \"17px 0\",\n      width: \"100%\",\n      marginTop: 32,\n    },\n    ProfileWarning: {\n      marginTop: 20,\n    },\n    warningText: {\n      color: \"#F59E0B\",\n      marginLeft: 10,\n    },\n    goOutButton: {\n      margin: \"0 10px\",\n      width: \"100%\",\n      backgroundColor: \"#EF4444\",\n      color: \"#fff\",\n      height: 56,\n      \":hover\": {\n        color: \"#000 !important\",\n      },\n    },\n    Dialog: {\n      backgroundColor: \"#F7F8F9\",\n      padding: \"30px\",\n    },\n    DialogTitle: {\n      fontSize: 48,\n      fontWeight: 600,\n    },\n    AvatarIcon: {\n      position: \"relative\",\n    },\n    ButtonDelete: {\n      position: \"absolute\",\n      right: \"-5px\",\n      top: \"-10px\",\n      zIndex: 1,\n    },\n  }));\n  const classes = useStyles();\n  const domain = window.location.hostname;\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const { profileData, answerMyProfileAlert } = useSelector(\n    ({ MyProfileReducer }) => MyProfileReducer\n  );\n  // eslint-disable-next-line\n  const [file, setFile] = useState(null);\n  const profileDataList = profileData.data && profileData.data.profile;\n\n  const handleChange = function loadFile(event) {\n    if (event.target.files.length > 0) {\n      const file = URL.createObjectURL(event.target.files[0]);\n      setFile(file);\n      var data = new FormData();\n      data.append(\"photo\", event.target.files[0]);\n      dispatch(postProfilePhoto(data));\n      setLoading(true);\n    }\n  };\n\n  useLayoutEffect(() => {\n    if (answerMyProfileAlert.severity) {\n      setLoading(false);\n      dispatch(getProfileData());\n    }\n    // eslint-disable-next-line\n  }, [answerMyProfileAlert.severity]);\n\n  const logout = () => {\n    cookie.removeSpecific(\"token\", {\n      path: \"/\",\n      domain: domain,\n    });\n    history.push(\"/\");\n    setTimeout(() => {\n      window.location.reload();\n    }, 200);\n  };\n\n  const [open, setOpen] = React.useState({\n    logout: false,\n    removeAvatar: false,\n  });\n\n  const handleClickOpen = (key, value) => {\n    setOpen((open) => ({ ...open, [key]: !open[value] }));\n  };\n\n  const handleClose = (key, value) => {\n    setOpen((open) => ({ ...open, [key]: !open[value] }));\n  };\n\n  const removeAvatar = () => {\n    setLoading(true);\n    handleClose(\"removeAvatar\", \"removeAvatar\");\n    dispatch(removeImgAvatar());\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      firstname: \"\",\n      lastname: \"\",\n      phone: \"\",\n    },\n    onSubmit: (values) => {\n      values.phone = values.phone.replace(/[\\s+().,-]/g, \"\");\n\n      dispatch(editProfile(values));\n\n      location.search && (window.location.href = location.search.split(\"=\")[1]);\n    },\n  });\n\n  useEffect(() => {\n    formik.setFieldValue(\"firstname\", profileData?.data?.profile?.firstname);\n    formik.setFieldValue(\"lastname\", profileData?.data?.profile?.lastname);\n    formik.setFieldValue(\"phone\", `+9${profileData?.data?.profile?.phone}`);\n    // eslint-disable-next-line\n  }, [profileData]);\n\n  return (\n    <>\n      {loading && <Reload />}\n      <Snackbar\n        open={answerMyProfileAlert.open}\n        autoHideDuration={2000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() => dispatch(setMyProfile({ ...alert, open: false }))}\n      >\n        <Alert\n          onClose={() => dispatch(setMyProfile({ ...alert, open: false }))}\n          severity={answerMyProfileAlert.severity === 200 ? \"success\" : \"error\"}\n          variant=\"filled\"\n        >\n          {answerMyProfileAlert.severity === 200\n            ? `${t(\"successfullyChanged\")}`\n            : answerMyProfileAlert.message &&\n              answerMyProfileAlert.message.messages}\n        </Alert>\n      </Snackbar>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\n          <Box className={classes.ProfileBlock}>\n            <Dialog\n              open={open.removeAvatar}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <Box className={classes.Dialog}>\n                <DialogTitle\n                  id=\"alert-dialog-title\"\n                  className={classes.DialogTitle}\n                >\n                  {t(\"confirmToDeleteMessage\")}\n                </DialogTitle>\n                <DialogActions className={classes.DialogActions}>\n                  <Button\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                    onClick={() => handleClose(\"removeAvatar\", \"removeAvatar\")}\n                  >\n                    {t(\"cancel\")}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                    style={{ textTransform: \"initial\" }}\n                    onClick={() => removeAvatar()}\n                  >\n                    {t(\"yesDelete\")}\n                  </Button>\n                </DialogActions>\n              </Box>\n            </Dialog>\n\n            <Box style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"file\"\n                onChange={handleChange}\n                id=\"upload\"\n                accept=\"image/*\"\n                style={{ display: \"none\" }}\n              />\n              <label htmlFor=\"upload\">\n                <IconButton\n                  className={classes.AvatarIcon}\n                  style={{ padding: 0 }}\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                >\n                  <Button\n                    className={classes.ButtonDelete}\n                    onClick={() =>\n                      handleClickOpen(\"removeAvatar\", \"removeAvatar\")\n                    }\n                  >\n                    <DeleteIcon />\n                  </Button>\n                  <Avatar\n                    id=\"avatar\"\n                    className={classes.ProfileBlockImg}\n                    src={profileDataList?.avatar}\n                  />\n                </IconButton>\n              </label>\n              <label htmlFor=\"avatar\" />\n            </Box>\n\n            <form onSubmit={formik.handleSubmit}>\n              <span className=\"label\" style={{ color: \"#323A46\" }}>\n                {t(\"Name\")}\n              </span>\n              <TextField\n                label={t(\"Name\")}\n                type=\"text\"\n                variant=\"outlined\"\n                name=\"firstname\"\n                value={formik.values.firstname}\n                onChange={formik.handleChange}\n                disabled\n                className={classes.ProfileInput}\n              />\n              <span className=\"label\" style={{ color: \"#323A46\" }}>\n                {t(\"LastName\")}\n              </span>\n              <TextField\n                label={t(\"LastName\")}\n                type=\"text\"\n                disabled\n                variant=\"outlined\"\n                name=\"lastname\"\n                value={formik.values.lastname}\n                onChange={formik.handleChange}\n                className={classes.ProfileInput}\n              />\n              <span className=\"label\" style={{ color: \"#323A46\" }}>\n                {t(\"PhoneNumber\")}\n              </span>\n              <TextField\n                label={`9${profileData?.profile?.phone}` ? \"\" : t(\"LabelPhone\")}\n                type=\"text\"\n                required\n                disabled={profileData?.data?.profile?.phone}\n                variant=\"outlined\"\n                name=\"phone\"\n                // id=\"+996 (000) 00 00 00\"\n                InputProps={{\n                  inputComponent: MaskCustom,\n                }}\n                value={formik.values.phone}\n                onChange={formik.handleChange}\n                className={classes.ProfileInput}\n              />\n              {!profileData?.data?.profile?.phone && (\n                <Box\n                  style={{ marginTop: 10 }}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  <img className=\"icon-md\" src={errorIcon} alt=\"errorIcon\" />{\" \"}\n                  <Typography color=\"error\" style={{ marginLeft: 10 }}>\n                    {t(\"NotSpecified\")}\n                  </Typography>\n                </Box>\n              )}\n              <span className=\"label\" style={{ color: \"#323A46\" }}>\n                {t(\"email\")}\n              </span>\n\n              <TextField\n                label={profileData?.data?.profile?.email}\n                type=\"email\"\n                variant=\"outlined\"\n                name=\"email\"\n                onChange={formik.handleChange}\n                className={classes.ProfileInput}\n                disabled\n              />\n\n              {/* <Button type=\"submit\" className={classes.ProfileButton}>\n                {t(\"Save\")}\n              </Button> */}\n            </form>\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\n          <Box className={classes.ProfileBlock}>\n            <img className={classes.ProfileBlockImg} src={lock} alt=\"lock\" />\n            <Formik\n              initialValues={{\n                old_password: \"\",\n                new_password: \"\",\n                confirm_password: \"\",\n              }}\n              onSubmit={(values, { resetForm }) => {\n                setLoading(true);\n                dispatch(postChangePassword(values));\n                resetForm();\n              }}\n              render={(formik) => (\n                <Form>\n                  <span className=\"label\" style={{ color: \"#323A46\" }}>\n                    {t(\"OldPassword\")}\n                  </span>\n                  <Field\n                    render={({ field, form }) => (\n                      <TextField\n                        label={t(\"LabelOldPassword\")}\n                        type=\"password\"\n                        variant=\"outlined\"\n                        name=\"old_password\"\n                        value={formik.values.old_password}\n                        onChange={formik.handleChange}\n                        className={classes.ProfileInput}\n                        required\n                      />\n                    )}\n                  />\n                  <span className=\"label\" style={{ color: \"#323A46\" }}>\n                    {t(\"NewPassword\")}\n                  </span>\n                  <Field\n                    // eslint-disable-next-line\n                    render={({}) => (\n                      <TextField\n                        label={t(\"LabelNewPassword\")}\n                        type=\"password\"\n                        variant=\"outlined\"\n                        name=\"new_password\"\n                        value={formik.values.new_password}\n                        onChange={formik.handleChange}\n                        style={{ marginBottom: 8 }}\n                        className={classes.ProfileInput}\n                        required\n                      />\n                    )}\n                  />\n                  <Field\n                    // eslint-disable-next-line\n                    render={({}) => (\n                      <TextField\n                        label={t(\"LabelRepeatNewPassword\")}\n                        type=\"password\"\n                        variant=\"outlined\"\n                        name=\"confirm_password\"\n                        value={formik.values.confirm_password}\n                        onChange={formik.handleChange}\n                        className={classes.ProfileInput}\n                        required\n                      />\n                    )}\n                  />\n                  <Button\n                    type=\"submit\"\n                    className={classes.ProfileButton}\n                    disabled={loading}\n                  >\n                    {t(\"Save\")}\n                  </Button>\n                </Form>\n              )}\n            />\n          </Box>\n        </Grid>\n        <Dialog\n          open={open.logout}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <Box className={classes.Dialog}>\n            <DialogTitle\n              id=\"alert-dialog-title\"\n              className={classes.DialogTitle}\n            >\n              {t(\"logoutTitle\")}\n            </DialogTitle>\n            <DialogActions className={classes.DialogActions}>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClose(\"logout\", \"logout\")}\n              >\n                {t(\"Noo\")}\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                onClick={() => logout()}\n              >\n                {t(\"Yees\")}\n              </Button>\n            </DialogActions>\n          </Box>\n        </Dialog>\n\n        <Button\n          className={classes.goOutButton}\n          onClick={() => handleClickOpen(\"logout\", \"logout\")}\n        >\n          {t(\"LogOut\")}\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}