{"version":3,"sources":["pages/dashboard/PaymentForServices/Skeleton.jsx","../node_modules/@mui/icons-material/ErrorOutline.js","../node_modules/@mui/material/ClickAwayListener/ClickAwayListener.js","pages/dashboard/PaymentForServices/Services.jsx"],"names":["SkeletonPayments","sx","display","border","padding","borderRadius","variant","width","height","style","marginLeft","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_jsx","useStyles","Services","t","main","classes","dispatch","useDispatch","servicesId","useParams","useState","country","setCountry","open","setOpen","handleTooltipClose","handleTooltipOpen","useEffect","getByIdService","setIsDetailLoading","useSelector","Pay24Reducer","isLoadingServices","Array","isArray","JSON","parse","data","provider","allCountries","push","filter","setFilter","filteredCoin","useMemo","item","name","toLocaleLowerCase","startsWith","trim","ServicesList","countries","map","pos","Box","component","mt","mb","Container","maxWidth","Balance","payment","title","input","placeHolder","flexDirection","xs","lg","alignItems","background","boxShadow","md","rowGap","mr","sort","reverse","Button","className","button_active","button","size","onClick","Grid","container","spacing","from","keys","idx","sm","xl","Skeleton","id","active","position","box","src","url_logo","alt","Typography","Tooltip","PopperProps","disablePortal","arrow","placement","onClose","disableFocusListener","disableHoverListener","disableTouchListener","IconButton","bottom","right","color","fontSize","fontWeight","disabled","to","api_id","makeStyles","theme","justifyContent","overflow","transition","cursor","opacity","objectFit","marginRight","lineHeight","letterSpacing"],"mappings":"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","file":"static/js/38.e75eef21.chunk.js","sourcesContent":["import { Box } from \"@material-ui/core\";\nimport { Skeleton } from \"@mui/material\";\nimport React from \"react\";\n\nconst SkeletonPayments = () => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        border: \"1px solid rgba(0, 0, 0, 0.11)\",\n        padding: \"16px\",\n        borderRadius: 8,\n      }}\n    >\n      <Skeleton variant=\"circular\" width={40} height={40} />\n      <Box style={{ marginLeft: 16 }}>\n        <Skeleton variant=\"text\" width={180} height={40} />\n        <Skeleton variant=\"text\" width={140} height={25} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SkeletonPayments;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');\n\nexports.default = _default;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp } from '@mui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback'; // TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click Away Listener](https://mui.com/components/click-away-listener/)\n * - [Menus](https://mui.com/components/menus/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef( // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  const childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","/* eslint-disable eqeqeq */\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Container, makeStyles, Typography } from \"@material-ui/core\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getByIdService,\n  setIsDetailLoading,\n} from \"../../../redux/reducers/pay24\";\nimport Balance from \"../../../components/Balance\";\nimport CabinetTop from \"../../../components/cabinetTop\";\nimport SkeletonPayments from \"./Skeleton\";\nimport { Box } from \"@mui/system\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport { ClickAwayListener, Grid, IconButton, Tooltip } from \"@mui/material\";\n\nconst Services = ({ t, main }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { servicesId } = useParams();\n\n  const [country, setCountry] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleTooltipClose = () => {\n    setOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getByIdService(servicesId));\n    dispatch(setIsDetailLoading(true));\n\n    // eslint-disable-next-line\n  }, []);\n\n  const { Services, isLoadingServices } = useSelector(\n    ({ Pay24Reducer }) => Pay24Reducer\n  );\n\n  useEffect(() => {\n    if (Array.isArray(Services))\n      setCountry(\n        Services[0] && JSON.parse(Services[0]?.data)?.provider[\"@country\"]\n      );\n    allCountries.push(\"Кыргызстан\");\n\n    // eslint-disable-next-line\n  }, [Services]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  const filteredCoin = React.useMemo(\n    () =>\n      Services.filter((item) =>\n        item.name\n          .toLocaleLowerCase()\n          .startsWith(filter.toLocaleLowerCase().trim())\n      ),\n    // eslint-disable-next-line\n    [filter]\n  );\n  const ServicesList = filter ? filteredCoin : Services;\n\n  const countries = Services.map(\n    (item) => JSON.parse(item.data).provider[\"@country\"]\n  );\n\n  let allCountries = countries?.filter(\n    (item, pos) => countries.indexOf(item) == pos\n  );\n\n  return (\n    <Box component=\"section\" mt={main && 4} mb={main && 4}>\n      <Container maxWidth=\"lg\">\n        {!main && <Balance />}\n\n        <CabinetTop\n          payment\n          title={t(\"payments\")}\n          setFilter={setFilter}\n          input\n          placeHolder=\"Поиск услуг...\"\n        />\n\n        <Box\n          display=\"flex\"\n          flexDirection={{ xs: \"column\", lg: \"row\" }}\n          alignItems=\"start\"\n        >\n          <Box\n            sx={{\n              background: \"#fff\",\n              boxShadow: \" 0px 1px 0px #E2E8F0\",\n              borderRadius: \"13px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"24px\",\n            }}\n            width={{ xs: \"100%\", md: \"30%\" }}\n            rowGap=\"16px\"\n            mr={{ xs: 0, lg: 2 }}\n            mb={{ xs: 2, lg: 0 }}\n            display=\"flex\"\n            flexDirection=\"column\"\n          >\n            {allCountries\n              ?.sort()\n              .reverse()\n              .map((item) => (\n                <Button\n                  variant=\"contained\"\n                  className={\n                    country === item ? classes.button_active : classes.button\n                  }\n                  size=\"large\"\n                  onClick={() => setCountry(item)}\n                >\n                  {item}\n                </Button>\n              ))\n              .reverse()}\n          </Box>\n          {/* )} */}\n          <Grid container spacing={2}>\n            {isLoadingServices\n              ? Array.from(Array(20).keys()).map((item, idx) => (\n                  <Grid item xs={12} sm={6} md={4} lg={4} xl={4}>\n                    <SkeletonPayments />\n                  </Grid>\n                ))\n              : Services &&\n                ServicesList.filter(\n                  (item) =>\n                    JSON.parse(item.data).provider[\"@country\"] === country &&\n                    item.id !== 644\n                ).map((item) => (\n                  <Grid item xs={12} sm={6} md={4} lg={4} xl={4}>\n                    {item.active === \"1\" ? (\n                      <Box sx={{ position: \"relative\" }}>\n                        <div className={`${classes.box} disabled`}>\n                          <img src={item.url_logo} alt=\"\" />\n                          <Typography className={classes.title}>\n                            {item.name}\n                          </Typography>\n                        </div>\n                        <ClickAwayListener onClickAway={handleTooltipClose}>\n                          <div>\n                            <Tooltip\n                              PopperProps={{\n                                disablePortal: true,\n                              }}\n                              arrow\n                              sx={{ maxWidth: \"unset\" }}\n                              title={t(\"unavailable\")}\n                              placement=\"top-start\"\n                              onClose={handleTooltipClose}\n                              open={open}\n                              disableFocusListener\n                              disableHoverListener\n                              disableTouchListener\n                            >\n                              <IconButton\n                                sx={{\n                                  position: \"absolute!important\",\n                                  bottom: 8,\n                                  right: 8,\n                                  color: \"#777\",\n                                  fontSize: \"12px\",\n                                  fontWeight: \"600\",\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                }}\n                                onClick={handleTooltipOpen}\n                              >\n                                <ErrorOutlineIcon />\n                              </IconButton>\n                            </Tooltip>\n                          </div>\n                        </ClickAwayListener>\n                      </Box>\n                    ) : (\n                      <Link\n                        disabled\n                        className={classes.box}\n                        to={\n                          !main\n                            ? `/dashboard/payment-for-services/${servicesId}/${item.api_id}`\n                            : `/main/payment-for-services/binance-pay/${servicesId}/${item.api_id}`\n                        }\n                      >\n                        <img src={item.url_logo} alt=\"\" />\n                        <Typography className={classes.title}>\n                          {item.name}\n                        </Typography>\n                      </Link>\n                    )}\n                  </Grid>\n                ))}\n          </Grid>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Services;\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    position: \"relative\",\n    display: \"flex\",\n    background: \"#FFFFFF\",\n\n    height: \"104px\",\n    padding: \"8px 8px 8px 16px\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    overflow: \"hidden\",\n    transition: \"all 0.2s linear\",\n    boxShadow: \"0px 1px 0px #E2E8F0\",\n    borderRadius: \"8px\",\n    \"&:hover\": {\n      boxShadow: \"0px 0px 6px 2px #E2E8F0\",\n    },\n\n    \"&.disabled\": {\n      cursor: \"not-allowed\",\n      opacity: 0.4,\n      boxShadow: \"0px 1px 0px #E2E8F0!important\",\n    },\n\n    \"& img\": {\n      width: \"40px\",\n      height: \"40px\",\n      objectFit: \"contain\",\n      marginRight: 16,\n    },\n  },\n\n  title: {\n    fontWeight: \"500\",\n    fontSize: \"18px\",\n    lineHeight: \"23px\",\n    letterSpacing: \"-0.02em\",\n    color: \"#000000\",\n  },\n\n  button: {\n    width: \"100%\",\n    background: \"transparent\",\n    color: \"#B8C0CC\",\n\n    \"&:hover\": {\n      \"& .MuiButton-label\": {\n        color: \"#000\",\n      },\n    },\n  },\n\n  button_active: {\n    width: \"100%\",\n    background: \"#FCE34D\",\n    color: \"#000\",\n  },\n}));\n"],"sourceRoot":""}