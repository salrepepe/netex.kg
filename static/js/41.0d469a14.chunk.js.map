{"version":3,"sources":["assets/images/auth/authUserBg.webp","assets/images/auth/authClockBg.webp","assets/images/auth/authClockBgfuzzy.webp","assets/images/auth/authUserBgfuzzy.webp","containers/authContainer.jsx","pages/authentication/Register/index.jsx"],"names":["AuthContainer","children","user","classes","makeStyles","theme","authWrapper","maxWidth","margin","paddingTop","paddingBottom","textAlign","position","minHeight","breakpoints","down","content","width","height","backgroundImage","authBg","clockBg","top","left","backgroundSize","display","authBgFuzzy","clockBgFuzzy","right","bottom","backgroundRepeat","backgroundPosition","useStyles","className","Register","t","dispatch","useDispatch","history","useHistory","useState","password","password2","eyes","setEyes","toggleEyes","key","value","reload","setReload","answerRegisterAlert","useSelector","registerReducer","formik","useFormik","initialValues","firstname","lastname","email","password_confirm","terms","onSubmit","values","postRegisterData","cookie","set","path","firstUpdate","React","useRef","useLayoutEffect","current","severity","setTimeout","push","setAnswerRegister","alert","open","formControlPassword","background","color","boxShadow","paddingRight","fontWeight","whiteSpace","textOverflow","overflow","fontSize","borderColor","formControl","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","variant","message","messages","gutterBottom","component","style","to","handleSubmit","autoComplete","justifyContent","label","type","name","onChange","handleChange","inputProps","pattern","required","marginBottom","id","onClick","alignItems","marginTop","marginRight","control","defaultChecked","setFieldValue","target","textDecoration","size","disabled","disableShrink"],"mappings":"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","file":"static/js/41.0d469a14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/authUserBg.f100b4c7.webp\";","export default __webpack_public_path__ + \"static/media/authClockBg.a5c1bb9f.webp\";","export default __webpack_public_path__ + \"static/media/authClockBgfuzzy.cf644ebd.webp\";","export default __webpack_public_path__ + \"static/media/authUserBgfuzzy.982ea686.webp\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport authBg from \"./../assets/images/auth/authUserBg.webp\";\nimport clockBg from \"./../assets/images/auth/authClockBg.webp\";\nimport clockBgFuzzy from \"./../assets/images/auth/authClockBgfuzzy.webp\";\nimport authBgFuzzy from \"./../assets/images/auth/authUserBgfuzzy.webp\";\nconst AuthContainer = ({ children, user }) => {\n  const useStyles = makeStyles((theme) => ({\n    authWrapper: {\n      maxWidth: \"450px\",\n      margin: \"0 auto\",\n      paddingTop: 180,\n      paddingBottom: 80,\n      textAlign: \"center\",\n      position: \"relative\",\n      minHeight: \"873px\",\n      [theme.breakpoints.down(992)]: {\n        paddingTop: 140,\n        maxWidth: \"450px\",\n        minHeight: \"auto\",\n      },\n      \"&::before\": {\n        content: `\"\" !important`,\n        position: \"absolute\",\n        width: 450,\n        height: 450,\n        backgroundImage: `url(${user ? authBg : clockBg})`,\n        top: \"30%\",\n        left: \"-130%\",\n        backgroundSize: \"cover\",\n        [theme.breakpoints.down(992)]: {\n          width: 190,\n          height: 190,\n          top: \"45%\",\n          left: \"-38%\",\n        },\n        [theme.breakpoints.down(568)]: {\n          display: \"none\",\n        },\n      },\n      \"&::after\": {\n        content: `\"\" !important`,\n        position: \"absolute\",\n        width: 250,\n        height: 250,\n        backgroundImage: `url(${user ? authBgFuzzy : clockBgFuzzy})`,\n        right: \"-85%\",\n        top: \"20%\",\n        backgroundSize: \"cover\",\n        [theme.breakpoints.down(992)]: {\n          width: 90,\n          height: 90,\n          right: \"-13%\",\n          bottom: -90,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: 20,\n        },\n        [theme.breakpoints.down(568)]: {\n          display: \"none\",\n        },\n      },\n    },\n  }));\n\n  const classes = useStyles();\n  return <div className={classes.authWrapper}>{children}</div>;\n};\n\nexport default AuthContainer;\n","import React, { useLayoutEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  makeStyles,\n  Snackbar,\n  Checkbox,\n  Typography,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport AuthContainer from \"../../../containers/authContainer\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  postRegisterData,\n  setAnswerRegister,\n} from \"../../../redux/reducers/register\";\nimport { Alert } from \"@mui/material\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport cookie from \"cookie_js\";\nconst Register = ({ t }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [eyes, setEyes] = useState({ password: true, password2: true });\n  const toggleEyes = (key, value) => {\n    setEyes((eyes) => ({ ...eyes, [key]: !eyes[value] }));\n  };\n  const [reload, setReload] = useState(false);\n  const { answerRegisterAlert } = useSelector(\n    ({ registerReducer }) => registerReducer\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirm: \"\",\n    },\n    terms: false,\n    onSubmit: (values) => {\n      dispatch(postRegisterData(values));\n      cookie.set(\"ActivationAccountEmail\", values.email, { path: \"/\" });\n      setReload(true);\n    },\n  });\n\n  const firstUpdate = React.useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    if (answerRegisterAlert.severity === 200) {\n      setTimeout(() => {\n        history.push(\"/accounts/activation\");\n        dispatch(setAnswerRegister({ ...alert, open: false }));\n      }, 1000);\n    }\n    setReload(false);\n    // eslint-disable-next-line\n  }, [answerRegisterAlert.severity]);\n\n  const useStyles = makeStyles((theme) => ({\n    formControlPassword: {\n      \"& .MuiOutlinedInput-input\": {\n        background: \"transparent !important\",\n        color: \"#fff\",\n        boxShadow: \"none!important\",\n        paddingRight: \"50px\",\n      },\n\n      \"& .MuiInputLabel-formControl\": {\n        color: \"#B8C0CC !important\",\n        fontWeight: 300,\n        whiteSpace: \"nowrap\",\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\",\n        maxWidth: \"90%\",\n        fontSize: 16,\n      },\n      \"& .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#B8C0CC\",\n      },\n    },\n    formControl: {\n      \"& .MuiOutlinedInput-input\": {\n        background: \"transparent\",\n        boxShadow: \"none!important\",\n        color: \"#fff\",\n      },\n      \"& .MuiInputLabel-formControl\": {\n        color: \"#B8C0CC !important\",\n        fontWeight: 300,\n        whiteSpace: \"nowrap\",\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\",\n        maxWidth: \"90%\",\n        fontSize: 16,\n      },\n      \"& .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#B8C0CC\",\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <section className=\"dark\">\n      <Snackbar\n        open={answerRegisterAlert.open}\n        autoHideDuration={2000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() => dispatch(setAnswerRegister({ ...alert, open: false }))}\n      >\n        <Alert\n          onClose={() => dispatch(setAnswerRegister({ ...alert, open: false }))}\n          severity={answerRegisterAlert.severity === 200 ? \"success\" : \"error\"}\n          variant=\"filled\"\n        >\n          {answerRegisterAlert.severity === 200\n            ? t(\"successfullyLoginUpMessage\")\n            : answerRegisterAlert.message &&\n              answerRegisterAlert.message.messages}\n        </Alert>\n      </Snackbar>\n      <Container maxWidth=\"lg\">\n        <AuthContainer user>\n          <Typography variant=\"h3\" gutterBottom component=\"div\">\n            {t(\"CreateAccount\")}\n          </Typography>\n          <Typography\n            style={{ fontSize: 20 }}\n            variant=\"subtitle1\"\n            gutterBottom\n            component=\"div\"\n          >\n            {t(\"HaveAnAccount\")}{\" \"}\n            <NavLink to=\"/accounts/login\" className=\"link\">\n              {t(\"LogIn\")}\n            </NavLink>\n          </Typography>\n          <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Box style={{ width: \"48%\" }}>\n                <span className=\"label\">{t(\"Name\")}</span>\n                <TextField\n                  label={`${t(\"LabelName\")}`}\n                  className={classes.formControl}\n                  type=\"text\"\n                  variant=\"outlined\"\n                  name=\"firstname\"\n                  value={formik.values.firstname}\n                  onChange={formik.handleChange}\n                  inputProps={{ pattern: \"[A-Za-zА-Яа-яЁё-s]{1,22}\" }}\n                  required\n                />\n              </Box>\n              <Box style={{ width: \"48%\" }}>\n                <span className=\"label\">{t(\"LastName\")}</span>\n                <TextField\n                  label={t(\"LabelLastName\")}\n                  type=\"text\"\n                  variant=\"outlined\"\n                  className={classes.formControl}\n                  name=\"lastname\"\n                  value={formik.values.lastname}\n                  onChange={formik.handleChange}\n                  inputProps={{ pattern: \"[A-Za-zА-Яа-яЁё-s]{1,22}\" }}\n                  required\n                />\n              </Box>\n            </Box>\n            <span className=\"label\">E-mail</span>\n            <TextField\n              label={t(\"LabelEmail\")}\n              type=\"email\"\n              variant=\"outlined\"\n              name=\"email\"\n              className={classes.formControl}\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              required\n            />\n            <span className=\"label\">{t(\"Password\")}</span>\n            <Box style={{ position: \"relative\", marginBottom: 8 }}>\n              <TextField\n                type={eyes.password ? \"password\" : \"text\"}\n                id=\"outlined-basic\"\n                label={t(\"LabelPassword\")}\n                variant=\"outlined\"\n                name=\"password\"\n                className={classes.formControlPassword}\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                required\n              />\n              <span\n                onClick={() => toggleEyes(\"password\", \"password\")}\n                className=\"form__eyes\"\n              >\n                {eyes.password ? <VisibilityOffIcon /> : <VisibilityIcon />}\n              </span>\n            </Box>\n\n            <Box style={{ position: \"relative\" }}>\n              <TextField\n                type={eyes.password2 ? \"password\" : \"text\"}\n                id=\"outlined-basic\"\n                label={t(\"LabelRepeatNewPassword\")}\n                variant=\"outlined\"\n                className={classes.formControlPassword}\n                name=\"password_confirm\"\n                value={formik.values.password_confirm}\n                onChange={formik.handleChange}\n                required\n              />\n              <span\n                onClick={() => toggleEyes(\"password2\", \"password2\")}\n                className=\"form__eyes\"\n              >\n                {eyes.password2 ? <VisibilityOffIcon /> : <VisibilityIcon />}\n              </span>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\" style={{ marginTop: 10 }}>\n              <FormControlLabel\n                style={{ marginRight: 5 }}\n                control={<Checkbox defaultChecked color=\"primary\" />}\n                label=\"\"\n                name=\"terms\"\n                onChange={() =>\n                  formik.setFieldValue(\"terms\", !formik.values.terms)\n                }\n                value={formik.values.terms}\n              />\n              <Typography\n                style={{ fontSize: 14, textAlign: \"start\", fontWeight: \"200\" }}\n              >\n                {t(\"TermsOfUseButton\")}\n                <NavLink\n                  target=\"_blank\"\n                  to=\"/main/terms-of-use\"\n                  style={{ color: \"#FCE34D\", textDecoration: \"underline\" }}\n                >\n                  {t(\"TermsOfUse\")}\n                </NavLink>\n              </Typography>\n            </Box>\n            <Button\n              style={{ marginTop: 24, height: 56, width: \"100%\" }}\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n              disabled={formik.values.terms}\n              type=\"submit\"\n            >\n              {reload ? <CircularProgress disableShrink /> : t(\"Registration\")}\n            </Button>\n          </form>\n        </AuthContainer>\n      </Container>\n    </section>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}