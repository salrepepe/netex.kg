{"version":3,"sources":["pages/dashboard/Buy/index.jsx"],"names":["Buy","t","useState","filter","setFilter","dispatch","useDispatch","useSelector","СurrenciesReducer","СurrenciesList","СurrenciesLoading","useEffect","getСurrenciesList","filteredCoin","useMemo","item","name","toLocaleLowerCase","startsWith","trim","Сurrencies","title","input","container","spacing","can_buy","map","xs","sm","md","lg","xl","onClick","localStorage","setItem","JSON","stringify","href","currency","commission","Array","from","keys","idx","style","width"],"mappings":"wMAuEeA,UA9DH,SAAC,GAAW,IAATC,EAAQ,EAARA,EACb,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAWC,cAEjB,EAA8CC,aAC5C,qBAAGC,0BADGC,EAAR,EAAQA,oBAAgBC,EAAxB,EAAwBA,uBAIxBC,qBAAU,WACRN,EAASO,iBAER,IAEH,IAAMC,EAAeC,mBACnB,kBACEL,EAAeN,QAAO,SAACY,GAAD,OACpBA,EAAKC,KAAKC,oBAAoBC,WAAWf,EAAOc,oBAAoBE,aAGxE,CAAChB,IAEGiB,EAAajB,EAASU,EAAeJ,EAC3C,OACE,kCACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAYY,MAAOpB,EAAE,aAAcA,EAAGA,EAAGqB,OAAK,EAAClB,UAAWA,IAC1D,cAAC,IAAD,CAAMmB,WAAS,EAACC,QAAS,EAAzB,SACId,EAMEU,EACGjB,QAAO,SAACY,GAAD,OAAUA,EAAKU,WACtBC,KAAI,SAACX,GAAD,OACH,cAAC,IAAD,CACEA,MAAI,EACJY,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,QAAS,kBACPC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUrB,KARtD,SAWE,cAAC,IAAD,CACEA,KAAMA,EACNsB,KAAI,iCAA4BtB,EAAKuB,UACrCC,YAAU,SAtBlBC,MAAMC,KAAKD,MAAM,IAAIE,QAAQhB,KAAI,SAACX,EAAM4B,GAAP,OAC/B,cAAC,IAAD,CAAM5B,MAAI,EAACY,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACE,cAAC,IAAD,CAA0Ba,MAAO,CAAEC,MAAO,MAArBF","file":"static/js/56.eb68c20b.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport CabinetTop from \"../../../components/cabinetTop\";\nimport CryptoBlock from \"../../../components/CryptoBlock\";\nimport Balance from \"../../../components/Balance\";\nimport CryptoSkeleton from \"../../../components/CryptoSkeleton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getСurrenciesList } from \"../../../redux/reducers/Сurrencies\";\n\nconst Buy = ({ t }) => {\n  const [filter, setFilter] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const { СurrenciesList, СurrenciesLoading } = useSelector(\n    ({ СurrenciesReducer }) => СurrenciesReducer\n  );\n\n  useEffect(() => {\n    dispatch(getСurrenciesList());\n    // eslint-disable-next-line \n  }, []);\n\n  const filteredCoin = useMemo(\n    () =>\n      СurrenciesList.filter((item) =>\n        item.name.toLocaleLowerCase().startsWith(filter.toLocaleLowerCase().trim())\n      ),\n    // eslint-disable-next-line\n    [filter]\n  );\n  const Сurrencies = filter ? filteredCoin : СurrenciesList;\n  return (\n    <section>\n      <Container>\n        <Balance />\n        <CabinetTop title={t(\"buyEMoney\")} t={t} input setFilter={setFilter} />\n        <Grid container spacing={2}>\n          {!СurrenciesLoading\n            ? Array.from(Array(12).keys()).map((item, idx) => (\n                <Grid item xs={12} sm={6} md={3} lg={3} xl={3}>\n                  <CryptoSkeleton key={idx} style={{ width: 389 }} />\n                </Grid>\n              ))\n            : Сurrencies\n                .filter((item) => item.can_buy)\n                .map((item) => (\n                  <Grid\n                    item\n                    xs={12}\n                    sm={6}\n                    md={3}\n                    lg={3}\n                    xl={3}\n                    onClick={() =>\n                      localStorage.setItem(\"sellDetail\", JSON.stringify(item))\n                    }\n                  >\n                    <CryptoBlock\n                      item={item}\n                      href={`/dashboard/buy/details/${item.currency}`}\n                      commission\n                    />\n                  </Grid>\n                ))}\n        </Grid>\n      </Container>\n    </section>\n  );\n};\n\nexport default Buy;\n"],"sourceRoot":""}