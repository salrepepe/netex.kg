{"version":3,"sources":["shared/Boxes.jsx","components/inputMask/unicalMask.jsx","assets/images/state/commissionDark.svg","assets/images/state/warning.svg","assets/images/state/coin.svg","components/2faDialog/index.jsx","pages/dashboard/Withdrawal/WithdrawalDetails/ConfirmDialog.jsx","pages/dashboard/Withdrawal/WithdrawalDetails/index.jsx"],"names":["WhiteBox","withStyles","theme","root","background","boxShadow","borderRadius","height","display","justifyContent","alignItems","padding","transition","breakpoints","down","flexDirection","Box","MaskCustom","React","props","ref","onChange","id","other","mask","definitions","inputRef","onAccept","value","target","name","overwrite","F2aDialog","t","open","login","setOpen","values","classes","useStyles","dispatch","useDispatch","history","useHistory","useState","loading","setLoading","answerLoginAlert","useSelector","loginReducer","withdrawReducer","withDrawDataConfirm","withDrawData","firstUpdate","useRef","useLayoutEffect","current","severity","setTimeout","push","setWithDrawDataConfirm","paper","onClose","scroll","className","dialog","onClick","close","src","alt","variant","title","subtitle","initialValues","email","password","onSubmit","postLoginData","confirmWithDraw","message","confirm","handleChange","style","width","type","required","input","label","InputProps","inputComponent","size","disabled","color","button","makeStyles","overflow","margin","maxWidth","position","top","right","fontSize","lineHeight","marginBottom","textAlign","fontWeight","marginTop","ConformDialog","setConfirm","sum","chosenNetwork","commission","security","Dialog","DialogContent","Typography","listStyle","component","amount","currency","description","Button","CircularProgress","whiteSpace","borderBottom","textOverflow","border","letterSpacing","marginLeft","withRouter","match","useTheme","mobile","useMediaQuery","choosenNetwork","setChoosenNetwork","setSum","setCommission","СurrenciesList","СurrenciesReducer","withDrawParameters","isLoading","withdrawCoin","filter","item","params","coin","formik","useFormik","wallet","network","createWithDraw","useEffect","getWithDrawParameters","data","parameters","networks","setFieldValue","Object","find","e","min_qty","sumWithCommission","toFixed","decimal","status","NotFound","Snackbar","autoHideDuration","setWithDrawData","anchorOrigin","vertical","horizontal","Alert","messages","Container","WithdrawalDetailsTitle","length","boxMb","warning","marginRight","Grid","container","spacing","xs","sm","md","CoinIcon","CommissionIcon","handleSubmit","mt","BuyDetailsTitle","balance","sx","FormControl","formControl","InputLabel","Select","fullWidth","map","MenuItem","WithdrawalDetailsLabel","TextField","inputProps","pattern","onKeyPress","event","test","key","preventDefault","WithdrawalDetailsInput","onBlur","backgroundColor","WithdrawalDetailsDate","WithdrawalDetailsDateText","cursor","left"],"mappings":"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","file":"static/js/22.5c0e0abb.chunk.js","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\"\n\nexport const WhiteBox = withStyles((theme) => ({\n\troot: {\n\t\tbackground: \" #FFFFFF\",\n\t\tboxShadow: \"0px 1px 0px #E2E8F0\",\n\t\tborderRadius: 8,\n\t\theight: 167,\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-start\",\n\t\talignItems: \"center\",\n\t\tpadding: \"30px\",\n\t\ttransition: \"all 0.2s linear\",\n\t\t\"&:hover\": {\n\t\t\tboxShadow: \"0px 0px 6px 2px #E2E8F0\",\n\t\t},\n\t\t[theme.breakpoints.down(576)]: {\n\t\t\tdisplay: \"flex\",\n\t\t\tflexDirection: \"column\",\n\t\t},\n\t},\n}))(Box)\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMaskInput } from \"react-imask\";\n\nexport const MaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n  const { onChange, id, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask={id}\n      definitions={{\n        \"#\": /[1-9]/,\n      }}\n      inputRef={ref}\n      onAccept={(value) => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\n\nMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/commissionDark.c1451589.svg\";","export default __webpack_public_path__ + \"static/media/warning.f8c3592a.svg\";","export default __webpack_public_path__ + \"static/media/coin.f1bea9ad.svg\";","import React, { useLayoutEffect, useState } from \"react\";\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  IconButton,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport close from \"../../assets/images/state/close.svg\";\nimport { Form, Formik } from \"formik\";\nimport { postLoginData } from \"../../redux/reducers/login\";\nimport { MaskCustom } from \"../inputMask/unicalMask\";\nimport {\n  confirmWithDraw,\n  setWithDrawDataConfirm,\n} from \"../../redux/reducers/withdraw\";\nimport { useHistory } from \"react-router\";\n\nconst F2aDialog = ({ t, open, login, setOpen, values }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const { answerLoginAlert } = useSelector(({ loginReducer }) => loginReducer);\n\n  const { withDrawDataConfirm, withDrawData } = useSelector(\n    ({ withdrawReducer }) => withdrawReducer\n  );\n\n  const firstUpdate = React.useRef(true);\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    if (answerLoginAlert.severity === 200) setLoading(false);\n    else setLoading(false);\n  }, [answerLoginAlert]);\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    if (withDrawDataConfirm.severity === 500) {\n      setLoading(false);\n      setOpen(false);\n      setTimeout(() => {\n        history.push(\"/dashboard/history\");\n        dispatch(\n          setWithDrawDataConfirm({\n            ...withDrawDataConfirm,\n            severity: null,\n            open: false,\n          })\n        );\n      }, 1000);\n    } else {\n      setLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [withDrawDataConfirm]);\n\n  return (\n    <Dialog\n      open={open}\n      classes={{ paper: classes.paper }}\n      onClose={() => setOpen(false)}\n      scroll=\"body\"\n    >\n      <DialogContent className={classes.dialog}>\n        <IconButton\n          aria-label=\"close\"\n          onClick={() => setOpen(false)}\n          className={classes.close}\n        >\n          <img src={close} alt=\"\" />\n        </IconButton>\n        <Typography variant=\"h4\" className={classes.title}>\n          {t(\"f2a\")}\n        </Typography>\n        <Typography variant=\"body1\" className={classes.subtitle}>\n          {t(\"f2aSubtitle\")}\n        </Typography>\n        <Formik\n          initialValues={\n            login\n              ? {\n                  email: values.email,\n                  password: values.password,\n                }\n              : { \"2fa_otp\": \"\" }\n          }\n          onSubmit={(values) => {\n            setLoading(true);\n            login\n              ? dispatch(postLoginData(values))\n              : dispatch(\n                  confirmWithDraw(withDrawData?.message?.confirm?.id, values)\n                );\n          }}\n        >\n          {({ values, handleChange }) => (\n            <Form style={{ width: \"100%\" }}>\n              <TextField\n                name=\"2fa_otp\"\n                type=\"number\"\n                required\n                onChange={handleChange}\n                value={values[\"2fa_otp\"]}\n                id={\"000000\"}\n                className={classes.input}\n                label={t(\"LabelSecurityCode\")}\n                variant=\"outlined\"\n                InputProps={{\n                  inputComponent: MaskCustom,\n                }}\n              />\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                disabled={loading}\n                color=\"primary\"\n                type=\"submit\"\n                className={classes.button}\n              >\n                {loading ? (\n                  <CircularProgress color=\"secondary\" />\n                ) : (\n                  t(\"continue\")\n                )}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default F2aDialog;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: \"100%\",\n    borderRadius: 16,\n    padding: \"40px 19px 50px!important\",\n  },\n  dialog: {\n    overflow: \"hidden\",\n    display: \"flex\",\n    margin: \"0 auto\",\n    padding: \"0!important\",\n    justifyContent: \"center\",\n    maxWidth: \"90%\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n\n    [theme.breakpoints.down(992)]: {\n      padding: \"16px\",\n    },\n  },\n  close: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n  },\n  title: {\n    fontSize: 32,\n    lineHeight: 1,\n    marginBottom: 10,\n    textAlign: \"center\",\n    [theme.breakpoints.down(992)]: {\n      fontSize: 28,\n    },\n  },\n\n  subtitle: {\n    color: \"#777\",\n    marginBottom: 40,\n    fontWeight: \"400\",\n    textAlign: \"center\",\n  },\n  input: {\n    background: \"#F7F8F9\",\n    boxShadow: \"0px 1px 0px #E2E8F0\",\n    marginTop: 20,\n  },\n\n  button: {\n    width: \"100%\",\n    height: 56,\n    marginTop: 16,\n  },\n}));\n","import {\n  Dialog,\n  DialogContent,\n  makeStyles,\n  Typography,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport {\n  confirmWithDraw,\n  setWithDrawDataConfirm,\n} from \"../../../../redux/reducers/withdraw\";\n\nconst ConformDialog = ({\n  t,\n  confirm,\n  setConfirm,\n  sum,\n  chosenNetwork,\n  open,\n  setOpen,\n  commission,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n\n  const { withDrawDataConfirm, withDrawData } = useSelector(\n    ({ withdrawReducer }) => withdrawReducer\n  );\n\n  const firstUpdate = useRef(true);\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    if (withDrawDataConfirm?.message?.security) {\n      setOpen(true);\n      setConfirm(false);\n      setLoading(false);\n    }\n\n    if (withDrawDataConfirm.severity === 200) {\n      setConfirm(false);\n      setLoading(false);\n      setTimeout(() => {\n        history.push(\"/dashboard/history\");\n        dispatch(\n          setWithDrawDataConfirm({\n            ...withDrawDataConfirm,\n            severity: null,\n            open: false,\n          })\n        );\n      }, 1000);\n    }\n\n    // eslint-disable-next-line\n  }, [withDrawDataConfirm]);\n\n  return (\n    <Dialog\n      open={confirm}\n      onClose={() => setConfirm(false)}\n      scroll=\"body\"\n      classes={{ paper: classes.paper }}\n    >\n      <DialogContent className={classes.DialogContent}>\n        <Typography variant=\"h2\" className={classes.title}>\n          {t(\"paymentСonfirmation\")}\n        </Typography>\n        <ul style={{ listStyle: \"none\" }}>\n          <Typography variant=\"h5\" component=\"li\">\n            {t(\"AmountToBeDebited\")}\n            <div></div>\n            <span>\n              {withDrawData?.message?.confirm?.amount}{\" \"}\n              {withDrawData?.message?.confirm?.currency}\n            </span>\n          </Typography>\n          <Typography variant=\"h5\" component=\"li\">\n            {t(\"AmountReceivable\")}\n            <div></div>\n            <span>\n              {sum} {withDrawData?.message?.confirm?.currency}\n            </span>\n          </Typography>\n          <Typography variant=\"h5\" component=\"li\">\n            {t(\"Commission\")}\n            <div></div>\n            <span>\n              {withDrawData?.message?.confirm?.commission}{\" \"}\n              {withDrawData?.message?.confirm?.currency}\n            </span>\n          </Typography>\n          <Typography variant=\"h5\" component=\"li\">\n            {t(\"OurCommission\")}\n            <div></div>\n            <span>\n              {commission} {withDrawData?.message?.confirm?.currency}\n            </span>\n          </Typography>\n          <Typography variant=\"h5\" component=\"li\">\n            {t(\"NetworkCommission\")}\n            <div></div>\n            <span>\n              {chosenNetwork?.commission}{\" \"}\n              {withDrawData?.message?.confirm?.currency}\n            </span>\n          </Typography>\n          <Typography variant=\"h5\" component=\"li\">\n            {t(\"note\")}:<div></div>\n            <span>{withDrawData?.message?.confirm?.description}</span>\n          </Typography>\n        </ul>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={() => {\n            setLoading(true);\n            dispatch(confirmWithDraw(withDrawData?.message?.confirm?.id));\n          }}\n        >\n          {loading ? (\n            <CircularProgress className=\"progress\" color=\"secondary\" />\n          ) : (\n            t(\"confirm\")\n          )}\n        </Button>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ConformDialog;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    borderRadius: 16,\n    width: \"100%\",\n  },\n\n  DialogContent: {\n    padding: \"40px 31px!important\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n\n    [theme.breakpoints.down(992)]: {\n      padding: \"16px\",\n    },\n\n    \"& ul\": {\n      \"& li\": {\n        fontWeight: 300,\n        marginBottom: 16,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        whiteSpace: \"nowrap\",\n        alignItems: \"baseline\",\n\n        \"& div\": {\n          width: \"100%\",\n          height: \"fit-content\",\n          borderBottom: \"2px dotted #B8C0CC\",\n          margin: \"0 3px\",\n        },\n\n        \"&:last-child\": {\n          \"& span\": {\n            textOverflow: \"ellipsis\",\n            overflow: \"hidden\",\n          },\n        },\n        \"& span\": {\n          fontWeight: 500,\n          maxWidth: \"50%\",\n        },\n      },\n    },\n\n    \"& button\": {\n      width: \"100%\",\n      height: 56,\n      marginTop: 16,\n      background: \"#FCE34D\",\n      borderRadius: \"8px\",\n      border: \"none\",\n      fontSize: 18,\n      fontWeight: 500,\n    },\n  },\n\n  close: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n  },\n\n  title: {\n    textAlign: \"center\",\n    color: \"#000\",\n    fontWeight: 500,\n    letterSpacing: \"-0.04em\",\n    lineHeight: \"56px\",\n    marginBottom: 24,\n\n    [theme.breakpoints.down(992)]: {\n      fontSize: 48,\n    },\n\n    [theme.breakpoints.down(768)]: {\n      fontSize: 34,\n      lineHeight: \"40px\",\n    },\n  },\n\n  subtitle: {\n    color: \"#64748B\",\n    marginLeft: 10,\n  },\n}));\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Snackbar,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { WhiteBox } from \"../../../../shared/Boxes\";\nimport warning from \"../../../../assets/images/state/warning.svg\";\nimport CommissionIcon from \"../../../../assets/images/state/commissionDark.svg\";\nimport CoinIcon from \"../../../../assets/images/state/coin.svg\";\nimport { MediumTitle } from \"../../../../shared/Typography\";\nimport { withRouter } from \"react-router\";\nimport {\n  createWithDraw,\n  getWithDrawParameters,\n  setWithDrawData,\n  setWithDrawDataConfirm,\n} from \"../../../../redux/reducers/withdraw\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport { Alert } from \"@mui/material\";\nimport ConformDialog from \"./ConfirmDialog\";\nimport NotFound from \"../../../NotFound\";\nimport F2aDialog from \"../../../../components/2faDialog\";\n\nconst WithdrawalDetails = ({ t, match }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down(768));\n  const dispatch = useDispatch();\n\n  const [choosenNetwork, setChoosenNetwork] = useState(null);\n  const [sum, setSum] = useState(\"\");\n  const [commission, setCommission] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n\n  const firstUpdate = useRef(true);\n\n  const { СurrenciesList } = useSelector(\n    ({ СurrenciesReducer }) => СurrenciesReducer\n  );\n  const { withDrawParameters, withDrawDataConfirm, withDrawData, isLoading } =\n    useSelector(({ withdrawReducer }) => withdrawReducer);\n\n  const withdrawCoin = СurrenciesList.filter(\n    (item) => item.currency === match.params.coin\n  )[0];\n\n  const formik = useFormik({\n    initialValues: {\n      sum: \"\",\n      currency: \"\",\n      wallet: \"\",\n      network: \"\",\n    },\n    onSubmit: (values) => {\n      values.currency = match.params.coin;\n      dispatch(createWithDraw(values));\n    },\n  });\n\n  useEffect(() => {\n    dispatch(getWithDrawParameters(match.params.coin));\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (withDrawParameters?.data?.parameters?.networks) {\n      formik.setFieldValue(\n        \"network\",\n        withDrawParameters?.data?.parameters?.networks[1]?.network\n      );\n    }\n    // eslint-disable-next-line\n  }, [withDrawParameters?.data?.parameters]);\n\n  useEffect(() => {\n    const choosenNetwork = Object.values(\n      typeof withDrawParameters?.data?.parameters?.networks === \"object\" &&\n        withDrawParameters?.data?.parameters?.networks\n      // eslint-disable-next-line eqeqeq\n    )?.find((e) => e.network == formik.values.network);\n\n    const sumWithCommission = () => {\n      const commission =\n        (formik.values.sum / 100) *\n        withDrawParameters?.data?.parameters?.commission;\n\n      setCommission(commission);\n      return formik.values.sum - commission - choosenNetwork.commission;\n    };\n\n    if (formik.values.sum >= choosenNetwork?.min_qty) {\n      setSum(sumWithCommission().toFixed(withdrawCoin?.decimal));\n    } else {\n      setSum(0.0);\n    }\n\n    setChoosenNetwork(choosenNetwork);\n    // eslint-disable-next-line\n  }, [formik.values.sum, formik.values.network]);\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    if (withDrawData?.message?.confirm) {\n      setConfirm(true);\n    }\n    // eslint-disable-next-line\n  }, [withDrawData]);\n\n  return (\n    <>\n      {withDrawParameters.status === 400 ? (\n        <NotFound />\n      ) : (\n        <section style={{ color: \"#000\" }}>\n          <ConformDialog\n            t={t}\n            setConfirm={setConfirm}\n            confirm={confirm}\n            sum={sum}\n            commission={commission}\n            chosenNetwork={choosenNetwork}\n            open={open}\n            setOpen={setOpen}\n          />\n          <F2aDialog open={open} setOpen={setOpen} t={t} />\n          <Snackbar\n            open={withDrawData?.open || withDrawDataConfirm?.open}\n            autoHideDuration={3000}\n            onClose={() => {\n              if (withDrawData?.open)\n                dispatch(setWithDrawData({ ...withDrawData, open: false }));\n              else\n                dispatch(\n                  setWithDrawDataConfirm({\n                    ...withDrawDataConfirm,\n                    open: false,\n                  })\n                );\n            }}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          >\n            <Alert\n              severity={\n                withDrawDataConfirm?.severity === 200 ? \"success\" : \"error\"\n              }\n              color={\n                withDrawDataConfirm?.severity === 200 ? \"success\" : \"error\"\n              }\n              variant=\"filled\"\n            >\n              {withDrawData?.message?.messages ||\n                withDrawDataConfirm?.message?.messages}\n            </Alert>\n          </Snackbar>\n          {isLoading ? (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              height=\"80vh\"\n            >\n              <CircularProgress color=\"secondary\" />\n            </Box>\n          ) : (\n            <Container>\n              <Typography\n                variant=\"h3\"\n                className={classes.WithdrawalDetailsTitle}\n              >\n                {t(\"WithdrawFundsFrom\")} {match.params.coin}{\" \"}\n                {t(\"withdrawWallet\")}\n              </Typography>\n              {Object.values(\n                typeof withDrawParameters?.data?.parameters?.networks ===\n                  \"object\" && withDrawParameters?.data?.parameters?.networks\n              ).length < 2 && (\n                <Box className={classes.boxMb}>\n                  <img src={warning} style={{ marginRight: 16 }} alt=\"\" />\n                  <Typography\n                    variant=\"h5\"\n                    style={{ color: \"#F59E0B\", fontWeight: \"300\" }}\n                  >\n                    Внимание! Вывод {match.params.coin} возможен только на{\" \"}\n                    {choosenNetwork?.network}\n                  </Typography>\n                </Box>\n              )}\n              <Grid container spacing={2} justifyContent=\"center\">\n                <Grid xs={12} sm={6} md={3} item>\n                  <WhiteBox style={{ height: 210, flexDirection: \"column\" }}>\n                    <img className=\"icon-lg\" src={CoinIcon} alt=\"\" />\n                    <Typography variant=\"h5\" className={classes.subtitle}>\n                      {t(\"MinAmount\")}\n                    </Typography>\n                    <Typography variant=\"h4\" className={classes.title}>\n                      {choosenNetwork?.min_qty}\n                      &#160;\n                      {match.params.coin}\n                    </Typography>\n                  </WhiteBox>\n                </Grid>\n                <Grid xs={12} sm={6} md={3} item>\n                  <WhiteBox style={{ height: 210, flexDirection: \"column\" }}>\n                    <img className=\"icon-lg\" src={CommissionIcon} alt=\"\" />\n                    <Typography variant=\"h5\" className={classes.subtitle}>\n                      {t(\"OurCommission\")}\n                    </Typography>\n                    <Typography variant=\"h4\" className={classes.title}>\n                      {withDrawParameters?.data?.parameters?.commission} %\n                    </Typography>\n                  </WhiteBox>\n                </Grid>\n                <Grid xs={12} sm={6} md={3} item>\n                  <WhiteBox style={{ height: 210, flexDirection: \"column\" }}>\n                    <img className=\"icon-lg\" src={CommissionIcon} alt=\"\" />\n                    <Typography variant=\"h5\" className={classes.subtitle}>\n                      {t(\"NetworkCommission\")}\n                    </Typography>\n                    <Typography variant=\"h4\" className={classes.title}>\n                      {!choosenNetwork\n                        ? withDrawParameters?.data?.parameters?.commission\n                        : choosenNetwork?.commission}\n                      &#160;\n                      {match.params.coin}\n                    </Typography>\n                  </WhiteBox>\n                </Grid>\n              </Grid>\n              <form onSubmit={formik.handleSubmit}>\n                <Box mt={\"40px\"}>\n                  <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <MediumTitle\n                      variant=\"h4\"\n                      className={classes.BuyDetailsTitle}\n                      onClick={() => {\n                        formik.setFieldValue(\"sum\", withdrawCoin?.balance);\n                      }}\n                    >\n                      {t(\"availableAmount\")}{\" \"}\n                      <span>{withdrawCoin?.balance}</span> {match.params.coin}\n                    </MediumTitle>\n                  </Box>\n                  <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    style={mobile ? { flexDirection: \"column\" } : null}\n                    sx={{\n                      flexDirection: { xs: \"column\", sm: \"column\", md: \"row\" },\n                    }}\n                  >\n                    <FormControl className={classes.formControl}>\n                      <InputLabel>{t(\"network\")}</InputLabel>\n                      <Select\n                        fullWidth\n                        name=\"network\"\n                        required\n                        label={t(\"network\")}\n                        variant=\"outlined\"\n                        value={formik.values.network}\n                        onChange={formik.handleChange}\n                      >\n                        {Object.values(\n                          typeof withDrawParameters?.data?.parameters\n                            ?.networks === \"object\" &&\n                            withDrawParameters?.data?.parameters?.networks\n                        ).map((item) => (\n                          <MenuItem value={item.network}>{item.name}</MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                    <Box\n                      display=\"flex\"\n                      width={\"100%\"}\n                      sx={{ margin: { xs: \"16px 0 0 0\", md: \"0 16px\" } }}\n                    >\n                      <Box className={classes.WithdrawalDetailsLabel}>\n                        {match.params.coin}\n                      </Box>\n                      <TextField\n                        label={t(\"AmountDispatch\")}\n                        name=\"sum\"\n                        required\n                        type=\"text\"\n                        InputProps={{\n                          inputProps: {\n                            pattern: \"\\\\d*.\\\\d*\",\n                          },\n                        }}\n                        value={formik.values.sum}\n                        onChange={formik.handleChange}\n                        onKeyPress={(event) => {\n                          if (!/[0-9.]/.test(event.key)) {\n                            event.preventDefault();\n                          }\n                        }}\n                        variant=\"outlined\"\n                        className={classes.WithdrawalDetailsInput}\n                      />\n                    </Box>\n                    <Box\n                      display=\"flex\"\n                      width={\"100%\"}\n                      sx={{ margin: { xs: \"16px 0 0 0\", md: \"0 16px\" } }}\n                    >\n                      <Box className={classes.WithdrawalDetailsLabel}>\n                        {match.params.coin}\n                      </Box>\n                      <TextField\n                        label={t(\"AmountReceivable\")}\n                        name=\"sum\"\n                        disabled\n                        value={!formik.values.sum ? \"\" : sum}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleChange}\n                        variant=\"outlined\"\n                        className={classes.WithdrawalDetailsInput}\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n                <Box mt={\"24px\"}>\n                  <MediumTitle style={{ color: \"#323A46\" }}>\n                    {t(\"number\")} {match.params.coin} {t(\"withdrawWallet\")}\n                  </MediumTitle>\n                  <TextField\n                    label={`${t(\"enterNumber\")} ${match.params.coin} ${t(\n                      \"withdrawWallet\"\n                    )}`}\n                    style={{\n                      backgroundColor: \"#fff\",\n                      borderRadius: 8,\n                      marginTop: 16,\n                    }}\n                    required\n                    name=\"wallet\"\n                    value={formik.values.wallet}\n                    onChange={formik.handleChange}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  type=\"submit\"\n                  disabled={!formik.values.sum || !formik.values.wallet}\n                  color=\"primary\"\n                  className={classes.button}\n                >\n                  {t(\"Continue\")}\n                </Button>\n              </form>\n            </Container>\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(WithdrawalDetails);\n\nconst useStyles = makeStyles((theme) => ({\n  WithdrawalDetailsDate: {\n    backgroundColor: \"#fff\",\n    boxShadow: \"0px 1px 0px #E2E8F0\",\n    borderRadius: 8,\n    marginBottom: 10,\n    maxWidth: 240,\n    marginRight: 40,\n  },\n  WithdrawalDetailsDateText: {\n    color: \"#64748B\",\n    fontSize: 23,\n    fontWeight: 300,\n  },\n  subtitle: {\n    color: \"#323A46\",\n    fontWeight: 300,\n    textAlign: \"center\",\n    margin: \"22px 0 8px\",\n  },\n  title: {\n    color: \"#323A46\",\n    fontWeight: 600,\n  },\n  WithdrawalDetailsLabel: {\n    color: \"#000000\",\n    fontWeight: 600,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center !important\",\n    justifyContent: \"center\",\n    padding: \"0 18px\",\n    backgroundColor: \"#E7EAEE\",\n    borderRadius: \"8px 0 0 8px\",\n    boxShadow: \"0px 1px 0px #E2E8F0\",\n  },\n\n  WithdrawalDetailsInput: {\n    \"& .MuiOutlinedInput-input\": {\n      backgroundColor: \"#fff\",\n      transition: \"all 0.2s linear\",\n      borderRadius: \"0 8px 8px 0!important\",\n    },\n\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderRadius: \"0 8px 8px 0!important\",\n    },\n  },\n\n  BuyDetailsTitle: {\n    color: \"#323A46\",\n    marginBottom: 16,\n    cursor: \"pointer\",\n\n    \"& span\": {\n      transition: \"all 0.2s linear\",\n      borderBottom: \"1px solid transparent\",\n    },\n\n    \"&:last-child:hover\": {\n      \"& span\": {\n        borderBottom: \"2px solid #000\",\n      },\n    },\n  },\n\n  boxMb: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 40,\n    [theme.breakpoints.down(992)]: {\n      marginBottom: 16,\n    },\n  },\n\n  button: {\n    margin: \"30px auto\",\n    display: \"block\",\n\n    [theme.breakpoints.down(992)]: {\n      width: \"100%\",\n      marginTop: 24,\n    },\n  },\n\n  formControl: {\n    backgroundColor: \"#FFF\",\n\n    \"& .MuiInputLabel-formControl\": {\n      left: 14,\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      left: 0,\n    },\n  },\n\n  WithdrawalDetailsTitle: {\n    textAlign: \"center\",\n    marginBottom: 24,\n\n    [theme.breakpoints.down(992)]: {\n      marginBottom: 16,\n    },\n  },\n}));\n"],"sourceRoot":""}