{"version":3,"sources":["pages/dashboard/sell/index.jsx"],"names":["Sell","t","dispatch","useDispatch","useState","filter","setFilter","useSelector","СurrenciesReducer","СurrenciesList","СurrenciesLoading","useEffect","getСurrenciesList","filteredCoin","React","useMemo","item","name","toLocaleLowerCase","startsWith","trim","Сurrencies","title","input","container","spacing","can_sell","map","xs","sm","md","lg","xl","href","currency","commission","Array","from","keys","idx","style","width"],"mappings":"iNA+DeA,UAtDF,SAAC,GAAW,IAATC,EAAQ,EAARA,EACRC,EAAWC,cACjB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAA8CC,aAC5C,qBAAGC,0BADGC,EAAR,EAAQA,oBAAgBC,EAAxB,EAAwBA,uBAIxBC,qBAAU,WACRT,EAASU,iBAGR,IAEH,IAAMC,EAAeC,IAAMC,SACzB,kBACEN,EAAeJ,QAAO,SAACW,GAAD,OACpBA,EAAKC,KACFC,oBACAC,WAAWd,EAAOa,oBAAoBE,aAG7C,CAACf,IAEGgB,EAAahB,EAASQ,EAAeJ,EAC3C,OACE,kCACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAYR,EAAGA,EAAGqB,MAAOrB,EAAE,cAAesB,OAAK,EAACjB,UAAWA,IAC3D,cAAC,IAAD,CAAMkB,WAAS,EAACC,QAAS,EAAzB,SACIf,EAMEW,EACGhB,QAAO,SAACW,GAAD,OAAUA,EAAKU,YACtBC,KAAI,SAACX,GAAD,OACH,cAAC,IAAD,CAAMA,MAAI,EAACY,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACE,cAAC,IAAD,CACEhB,KAAMA,EACNiB,KAAI,kCAA6BjB,EAAKkB,UACtCC,YAAU,SAZlBC,MAAMC,KAAKD,MAAM,IAAIE,QAAQX,KAAI,SAACX,EAAMuB,GAAP,OAC/B,cAAC,IAAD,CAAMvB,MAAI,EAACY,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACE,cAAC,IAAD,CAA0BQ,MAAO,CAAEC,MAAO,MAArBF","file":"static/js/62.5afe4f12.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport CabinetTop from \"../../../components/cabinetTop\";\nimport CryptoBlock from \"../../../components/CryptoBlock\";\nimport Balance from \"../../../components/Balance\";\nimport CryptoSkeleton from \"../../../components/CryptoSkeleton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getСurrenciesList } from \"../../../redux/reducers/Сurrencies\";\n\nconst Sell = ({ t }) => {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const { СurrenciesList, СurrenciesLoading } = useSelector(\n    ({ СurrenciesReducer }) => СurrenciesReducer\n  );\n\n  useEffect(() => {\n    dispatch(getСurrenciesList());\n\n    // eslint-disable-next-line\n  }, []);\n\n  const filteredCoin = React.useMemo(\n    () =>\n      СurrenciesList.filter((item) =>\n        item.name\n          .toLocaleLowerCase()\n          .startsWith(filter.toLocaleLowerCase().trim())\n      ),\n    // eslint-disable-next-line\n    [filter]\n  );\n  const Сurrencies = filter ? filteredCoin : СurrenciesList;\n  return (\n    <section>\n      <Container>\n        <Balance />\n        <CabinetTop t={t} title={t(\"sellEMoney\")} input setFilter={setFilter} />\n        <Grid container spacing={2}>\n          {!СurrenciesLoading\n            ? Array.from(Array(12).keys()).map((item, idx) => (\n                <Grid item xs={12} sm={6} md={3} lg={3} xl={3}>\n                  <CryptoSkeleton key={idx} style={{ width: 389 }} />\n                </Grid>\n              ))\n            : Сurrencies\n                .filter((item) => item.can_sell)\n                .map((item) => (\n                  <Grid item xs={12} sm={6} md={3} lg={3} xl={3}>\n                    <CryptoBlock\n                      item={item}\n                      href={`/dashboard/sell/details/${item.currency}`}\n                      commission\n                    />\n                  </Grid>\n                ))}\n        </Grid>\n      </Container>\n    </section>\n  );\n};\n\nexport default Sell;\n"],"sourceRoot":""}