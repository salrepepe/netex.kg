{"version":3,"sources":["pages/dashboard/Withdrawal/index.jsx"],"names":["Withdrawal","t","dispatch","useDispatch","useState","filter","setFilter","useSelector","СurrenciesReducer","СurrenciesList","СurrenciesLoading","isLoading","withdrawReducer","filteredCoin","React","useMemo","item","name","toLocaleLowerCase","startsWith","trim","Сurrencies","useEffect","setLoading","getСurrenciesList","title","input","container","spacing","can_withdraw","map","xs","sm","md","lg","xl","onClick","localStorage","setItem","JSON","stringify","href","currency","Array","from","keys","idx","style","width"],"mappings":"yNAoFeA,UA1EI,SAAC,GAAW,IAATC,EAAQ,EAARA,EACdC,EAAWC,cAEjB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAA8CC,aAC5C,qBAAGC,0BADGC,EAAR,EAAQA,oBAAgBC,EAAxB,EAAwBA,uBAIhBC,EAAcJ,aAAY,qBAAGK,mBAA7BD,UACFE,EAAeC,IAAMC,SACzB,kBACEN,EAAeJ,QAAO,SAACW,GAAD,OACpBA,EAAKC,KACFC,oBACAC,WAAWd,EAAOa,oBAAoBE,aAG7C,CAACf,IAEGgB,EAAahB,EAASQ,EAAeJ,EAW3C,OATAa,qBAAU,WACHX,GACHT,EAASqB,aAAW,IAGtBrB,EAASsB,iBAER,IAGD,kCACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CACEC,MAAOxB,EAAE,iBACTA,EAAGA,EACHyB,OAAK,EACLpB,UAAWA,IAEb,cAAC,IAAD,CAAMqB,WAAS,EAACC,QAAS,EAAzB,SACIlB,EAMEW,EACGhB,QAAO,SAACW,GAAD,OAAUA,EAAKa,gBACtBC,KAAI,SAACd,GAAD,OACH,cAAC,IAAD,CACEA,MAAI,EACJe,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,QAAS,WACPC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUxB,KARtD,SAWE,cAAC,IAAD,CACEA,KAAMA,EACNyB,KAAI,8BAAyBzB,EAAK0B,iBArB1CC,MAAMC,KAAKD,MAAM,IAAIE,QAAQf,KAAI,SAACd,EAAM8B,GAAP,OAC/B,cAAC,IAAD,CAAM9B,MAAI,EAACe,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACE,cAAC,IAAD,CAA0BY,MAAO,CAAEC,MAAO,MAArBF","file":"static/js/61.a972aa81.chunk.js","sourcesContent":["import { Container, Grid } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Balance from \"../../../components/Balance\";\nimport CabinetTop from \"../../../components/cabinetTop\";\nimport CryptoBlock from \"../../../components/CryptoBlock\";\nimport CryptoSkeleton from \"../../../components/CryptoSkeleton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading } from \"../../../redux/reducers/withdraw\";\nimport { getСurrenciesList } from \"../../../redux/reducers/Сurrencies\";\n\nconst Withdrawal = ({ t }) => {\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState(\"\");\n\n  const { СurrenciesList, СurrenciesLoading } = useSelector(\n    ({ СurrenciesReducer }) => СurrenciesReducer\n  );\n\n  const { isLoading } = useSelector(({ withdrawReducer }) => withdrawReducer);\n  const filteredCoin = React.useMemo(\n    () =>\n      СurrenciesList.filter((item) =>\n        item.name\n          .toLocaleLowerCase()\n          .startsWith(filter.toLocaleLowerCase().trim())\n      ),\n    // eslint-disable-next-line\n    [filter]\n  );\n  const Сurrencies = filter ? filteredCoin : СurrenciesList;\n\n  useEffect(() => {\n    if (!isLoading) {\n      dispatch(setLoading(true));\n    }\n\n    dispatch(getСurrenciesList());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <section>\n      <Container>\n        <Balance />\n        <CabinetTop\n          title={t(\"WithdrawFunds\")}\n          t={t}\n          input\n          setFilter={setFilter}\n        />\n        <Grid container spacing={2}>\n          {!СurrenciesLoading\n            ? Array.from(Array(12).keys()).map((item, idx) => (\n                <Grid item xs={12} sm={6} md={3} lg={3} xl={3}>\n                  <CryptoSkeleton key={idx} style={{ width: 389 }} />\n                </Grid>\n              ))\n            : Сurrencies\n                .filter((item) => item.can_withdraw)\n                .map((item) => (\n                  <Grid\n                    item\n                    xs={12}\n                    sm={6}\n                    md={3}\n                    lg={3}\n                    xl={3}\n                    onClick={() => {\n                      localStorage.setItem(\"sellDetail\", JSON.stringify(item));\n                    }}\n                  >\n                    <CryptoBlock\n                      item={item}\n                      href={`/dashboard/withdraw/${item.currency}`}\n                    />\n                  </Grid>\n                ))}\n        </Grid>\n      </Container>\n    </section>\n  );\n};\n\nexport default Withdrawal;\n"],"sourceRoot":""}