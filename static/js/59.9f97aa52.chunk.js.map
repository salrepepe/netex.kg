{"version":3,"sources":["pages/dashboard/P2P/CreateDeals/index.jsx"],"names":["CreateDeals","t","dispatch","useDispatch","history","useHistory","classes","useStyles","useState","center","setCenter","reload","setReload","useSelector","СurrenciesReducer","СurrenciesList","СurrenciesListFiat","P2PReducer","answerCreatedDeals","commission","useEffect","getСurrenciesListFiat","getCommission","fiat","Object","values","currencies","firstUpdate","React","useRef","useLayoutEffect","current","severity","setTimeout","push","localStorage","removeItem","setCreatedDeals","alert","open","PreviewObj","JSON","parse","getItem","PreviewObjFrom","type","assign","form","buy_quantity","sell_currency","bank_card","sell_quantity","buy_currency","description","phone","name_bank_card","formik","useFormik","initialValues","onSubmit","latitude","longitude","hasFiat","replace","createDeals","comm","allCurrency","concat","find","item","currency","style","color","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","variant","message","className","wrapper","title","fontWeight","handleSubmit","formControl","marginBottom","fullWidth","name","label","value","onChange","handleChange","required","display","alignItems","container","spacing","xs","sm","InputProps","inputProps","pattern","input","onKeyPress","event","test","key","preventDefault","map","index","src","logo","alt","coin","balance","verificationSelect","id","inputComponent","CardMaskCustom","placeholder","textarea","marginTop","disabled","button","backgroundColor","onClick","setItem","stringify","makeStyles","theme","borderBottom","paddingBottom","justifyContent","breakpoints","down","flexDirection","fontSize","border","height","left","Select","borderRadius","width","boxShadow","outlined","padding","outline","background","resize","transition","icon","objectFit","marginRight"],"mappings":"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","file":"static/js/59.9f97aa52.chunk.js","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport {\n  Container,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n  TextField,\n  Grid,\n  Button,\n  makeStyles,\n  Snackbar,\n  TextareaAutosize,\n  Box,\n} from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport Balance from \"../../../../components/Balance\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardMaskCustom } from \"../../../../components/inputMask/cardMask\";\nimport {\n  createDeals,\n  getCommission,\n  setCreatedDeals,\n} from \"../../../../redux/reducers/P2P\";\nimport { Alert } from \"@mui/material\";\nimport Map from \"../../../../components/map/Map\";\nimport {\n  getСurrenciesList,\n  getСurrenciesListFiat,\n} from \"../../../../redux/reducers/Сurrencies\";\nimport Reload from \"../../../../components/Reload\";\n\nconst CreateDeals = ({ t }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [center, setCenter] = useState([74.59, 42.87]);\n  const [reload, setReload] = useState(false);\n  const { СurrenciesList, СurrenciesListFiat } = useSelector(\n    ({ СurrenciesReducer }) => СurrenciesReducer\n  );\n  const { answerCreatedDeals, commission } = useSelector(\n    ({ P2PReducer }) => P2PReducer\n  );\n\n  useEffect(() => {\n    dispatch(getСurrenciesListFiat());\n    // dispatch(getСurrenciesList());\n    dispatch(getCommission());\n    // eslint-disable-next-line\n  }, []);\n\n  const fiat = Object.values(\n    typeof СurrenciesListFiat.currencies === \"object\" &&\n      СurrenciesListFiat.currencies\n  );\n\n  const firstUpdate = React.useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    if (answerCreatedDeals.severity === 201) {\n      setTimeout(() => {\n        history.push(\"/dashboard/p2p/deals\");\n        localStorage.removeItem(\"previewp2p\");\n        dispatch(setCreatedDeals({ ...alert, open: false }));\n      }, 600);\n    } else {\n      setReload(false);\n    }\n    // eslint-disable-next-line\n  }, [answerCreatedDeals.severity]);\n\n  const PreviewObj = JSON.parse(localStorage.getItem(\"previewp2p\"));\n\n  const PreviewObjFrom =\n    PreviewObj?.type === \"cash2\"\n      ? Object.assign({}, PreviewObj, { type: \"cash\" })\n      : PreviewObj?.type === \"card2\"\n      ? Object.assign({}, PreviewObj, { type: \"card\" })\n      : PreviewObj;\n\n  const form = PreviewObj\n    ? PreviewObjFrom\n    : {\n        type: \"\",\n        buy_quantity: \"\",\n        sell_currency: \"\",\n        bank_card: \"\",\n        sell_quantity: \"\",\n        buy_currency: \"\",\n        description: \"\",\n        phone: \"\",\n        name_bank_card: \"\",\n      };\n\n  const formik = useFormik({\n    initialValues: form,\n    onSubmit: (values) => {\n      values.type === \"cash\" && (values.latitude = center[0]);\n      values.type === \"cash\" && (values.longitude = center[1]);\n      hasFiat && values.type === \"card\" && (values.type = \"card2\");\n      hasFiat && values.type === \"cash\" && (values.type = \"cash2\");\n      values.type !== \"card\" && delete values.bank_card;\n      values.type !== \"card\" && delete values.name_bank_card;\n      values.type === \"card\" &&\n        (values.bank_card = values.bank_card.replace(/\\s/g, \"\"));\n      dispatch(createDeals(values));\n      setReload(true);\n      // alert(JSON.stringify(values, null, 2))\n      localStorage.removeItem(\"previewp2p\");\n    },\n  });\n\n  const comm = (formik.values.buy_quantity * commission?.commission) / 100;\n\n  const PreviewTo = (values) => {\n    history.push(\"/dashboard/p2p/PreviewDeal\");\n    values.commission = comm;\n    values.hasFiat = hasFiat;\n    values.type !== \"card\" && (values.latitude = center[0]);\n    values.type !== \"card\" && (values.longitude = center[1]);\n    hasFiat && values.type === \"card\" && (values.type = \"card2\");\n    hasFiat && values.type === \"cash\" && (values.type = \"cash2\");\n    values.type !== \"card\" && delete values.bank_card;\n    values.type !== \"card\" && delete values.name_bank_card;\n    localStorage.setItem(\"previewp2p\", JSON.stringify(values));\n  };\n\n  const allCurrency = fiat.concat(СurrenciesList);\n\n  const hasFiat = fiat.find(\n    (item) => item.currency === formik.values.sell_currency\n  );\n\n  return (\n    <section style={{ color: \"#000\" }}>\n      {reload && <Reload />}\n      <Container>\n        <Snackbar\n          open={answerCreatedDeals.open}\n          autoHideDuration={2000}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          onClose={() => dispatch(setCreatedDeals({ ...alert, open: false }))}\n        >\n          <Alert\n            onClose={() => dispatch(setCreatedDeals({ ...alert, open: false }))}\n            severity={answerCreatedDeals.severity === 201 ? \"success\" : \"error\"}\n            variant=\"filled\"\n          >\n            {answerCreatedDeals.severity === 201\n              ? `${t(\"dealSuccessfullyCreated\")}`\n              : answerCreatedDeals?.message}\n          </Alert>\n        </Snackbar>\n        <Balance />\n        <Box className={classes.wrapper}>\n          <Typography className={classes.title}>{t(\"newDeal\")}</Typography>\n          <Typography className={classes.title}>\n            <span style={{ fontWeight: 200 }}>{t(\"Commission\")}</span>:{\" \"}\n            {commission?.commission} %{\" \"}\n          </Typography>\n        </Box>\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\n          <div className=\"label-lg\">{t(\"TypeDeal\")}</div>\n          <FormControl\n            className={classes.formControl}\n            style={{ marginBottom: 20 }}\n          >\n            <InputLabel>{t(\"EnterTypeDeal\")}</InputLabel>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel>{t(\"EnterTypeDeal\")}</InputLabel>\n            <Select\n              fullWidth\n              name=\"type\"\n              label=\"EnterTypeDeal\"\n              variant=\"outlined\"\n              value={formik.values.type}\n              onChange={formik.handleChange}\n              required\n            >\n              <MenuItem value=\"card\" display=\"flex\" alignItems=\"centers\">\n                {t(\"bankCard\")}\n              </MenuItem>\n              <MenuItem value=\"cash\" display=\"flex\" alignItems=\"centers\">\n                {t(\"cash\")}\n              </MenuItem>\n            </Select>\n          </FormControl>\n\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <label className=\"label-lg\">{t(\"GiveBack\")}</label>\n              <TextField\n                label={t(\"EnterAmountShipment\")}\n                type=\"text\"\n                InputProps={{\n                  inputProps: {\n                    pattern: \"\\\\d*.\\\\d*\",\n                  },\n                }}\n                variant=\"outlined\"\n                name=\"sell_quantity\"\n                value={formik.values.sell_quantity}\n                onChange={formik.handleChange}\n                className={classes.input}\n                onKeyPress={(event) => {\n                  if (!/[0-9.]/.test(event.key)) {\n                    event.preventDefault();\n                  }\n                }}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <label className=\"label-lg\">{t(\"Currency\")}</label>\n              <FormControl className={classes.formControl}>\n                <InputLabel>{t(\"SelecCoinType\")}</InputLabel>\n                <Select\n                  fullWidth\n                  label={t(\"SelecCoinType\")}\n                  name=\"sell_currency\"\n                  value={formik.values.sell_currency}\n                  variant=\"outlined\"\n                  onChange={formik.handleChange}\n                  required\n                >\n                  {allCurrency.map((item, index) => {\n                    return (\n                      <MenuItem\n                        value={item.currency}\n                        display=\"flex\"\n                        alignItems=\"centers\"\n                        key={index}\n                      >\n                        <img\n                          src={item.logo}\n                          alt=\"coin\"\n                          className={classes.coin}\n                        />\n                        {item.name}\n                        {\"  \"}\n                        {item.balance && `(${item.balance})`}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <label className=\"label-lg\">{t(\"GetIt\")}</label>\n              <TextField\n                label={t(\"EnterAmountReceived\")}\n                type=\"text\"\n                InputProps={{\n                  inputProps: {\n                    pattern: \"\\\\d*.\\\\d*\",\n                  },\n                }}\n                variant=\"outlined\"\n                name={\"buy_quantity\"}\n                value={formik.values.buy_quantity}\n                onChange={formik.handleChange}\n                className={classes.input}\n                onKeyPress={(event) => {\n                  if (!/[0-9.]/.test(event.key)) {\n                    event.preventDefault();\n                  }\n                }}\n                required\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <div className=\"label-lg\">{t(\"Currency\")}</div>\n              <FormControl className={classes.formControl}>\n                <InputLabel>{t(\"SelectCurrencyDeal\")}</InputLabel>\n                <Select\n                  variant=\"outlined\"\n                  name=\"buy_currency\"\n                  value={formik.values.buy_currency}\n                  label={t(\"SelectCurrencyDeal\")}\n                  onChange={formik.handleChange}\n                  className={classes.verificationSelect}\n                  required\n                >\n                  {(!hasFiat ? fiat : СurrenciesList).map((item, index) => {\n                    return (\n                      <MenuItem\n                        value={item.currency}\n                        display=\"flex\"\n                        alignItems=\"centers\"\n                        key={index}\n                      >\n                        <img\n                          src={item.logo}\n                          alt=\"coin\"\n                          className={classes.coin}\n                        />\n                        {item.name}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          {formik.values.type === \"card\" && !hasFiat && (\n            <>\n              <div className=\"label-lg\">{t(\"ReceiptWallet\")}</div>\n              <TextField\n                label={t(\"bankCardNumber\")}\n                value={formik.values.bank_card}\n                onChange={formik.handleChange}\n                variant=\"outlined\"\n                name=\"bank_card\"\n                id=\"formatted-numberformat-input\"\n                className={classes.input}\n                InputProps={{\n                  inputComponent: CardMaskCustom,\n                }}\n                required\n              />\n              <div className=\"label-lg\">{t(\"bankName\")}</div>\n              <TextField\n                label={t(\"bankName\")}\n                value={formik.values.name_bank_card}\n                onChange={formik.handleChange}\n                variant=\"outlined\"\n                name=\"name_bank_card\"\n                id=\"formatted-numberformat-input\"\n                className={classes.input}\n                required\n              />\n            </>\n          )}\n\n          <label className=\"label-lg\">{t(\"Commentary\")}</label>\n          <TextareaAutosize\n            placeholder={t(\"WriteComment\")}\n            name=\"description\"\n            value={formik.values.description}\n            onChange={formik.handleChange}\n            className={classes.textarea}\n          />\n          {formik.values.type === \"cash\" && (\n            <>\n              <label className=\"label-lg\">{t(\"phoneNumber\")}</label>\n              <TextField\n                label={t(\"LabelPhone\")}\n                type=\"phone\"\n                variant=\"outlined\"\n                name=\"phone\"\n                value={formik.values.phone}\n                onChange={formik.handleChange}\n                className={classes.input}\n                required\n              />\n              <label className=\"label-lg\">{t(\"mapLocation\")}</label>\n              <Map setCenter={setCenter} center={center} />\n            </>\n          )}\n          <Grid container spacing={2} style={{ marginTop: 24 }}>\n            <Grid xs={12} sm={6} item>\n              <Button\n                disabled={!formik.values.type}\n                className={classes.button}\n                style={{ backgroundColor: \"#000\", color: \"#fff\" }}\n                onClick={() => PreviewTo(formik.values)}\n              >\n                {t(\"Preview\")}\n              </Button>\n            </Grid>\n            <Grid xs={12} sm={6} item>\n              <Button\n                className={classes.button}\n                style={{ backgroundColor: \"#FCE34D\" }}\n                type=\"submit\"\n              >\n                {t(\"CreateDeal\")}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </section>\n  );\n};\n\nexport default CreateDeals;\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    borderBottom: \"2px solid #E7EAEE\",\n    paddingBottom: \"35px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingBottom: \"16px\",\n      flexDirection: \"column\",\n    },\n  },\n  title: {\n    fontSize: \"23px !important\",\n    fontWeight: 600,\n    color: \"#000\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: 10,\n    },\n  },\n  form: {\n    marginTop: 40,\n  },\n  formControl: {\n    backgroundColor: \"#FFF\",\n    \"& .MuiSelect-root\": {\n      border: \"none!important\",\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"21px\",\n    },\n    \"& .MuiInputLabel-formControl\": {\n      left: 24,\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      left: 0,\n    },\n  },\n  Select: {\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n  },\n  input: {\n    backgroundColor: \"#fff\",\n    borderRadius: 8,\n    width: \"100%\",\n    marginBottom: 5,\n    boxShadow: \"0px 1px 5px #E2E8F0\",\n    \"&:focus\": {\n      outlined: \"none\",\n    },\n  },\n\n  textarea: {\n    padding: \"16px 24px\",\n    outline: \"none\",\n    width: \"100%\",\n    height: \"250px!important\",\n    background: \"#FFFFFF\",\n\n    marginTop: 8,\n    resize: \"none\",\n    boxShadow: \"0px 1px 0px #E2E8F0\",\n    borderRadius: \"8px\",\n    fontSize: 20,\n    transition: \"all 0.2s linear\",\n    border: \"2px solid transparent\",\n\n    \"&:focus\": {\n      border: \"2px solid #FCE34D\",\n    },\n  },\n\n  icon: {\n    width: 140,\n    height: 30,\n    objectFit: \"contain\",\n  },\n  button: {\n    padding: \"17px 0 !important\",\n    width: \"100%\",\n  },\n  coin: {\n    width: 30,\n    height: 30,\n    objectFit: \"contain\",\n    marginRight: 20,\n  },\n}));\n"],"sourceRoot":""}