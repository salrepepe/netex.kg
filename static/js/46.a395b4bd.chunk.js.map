{"version":3,"sources":["assets/images/state/success.svg","pages/dashboard/MoneyTransaction/Dialog.jsx","pages/dashboard/MoneyTransaction/GetMoney.jsx"],"names":["DialogSuccess","success","setSuccess","t","classes","useStyles","history","useHistory","Dialog","open","onClose","push","scroll","paper","DialogContent","className","dialogContent","IconButton","onClick","close","src","alt","successIcon","style","marginBottom","Typography","variant","maxWidth","textAlign","Button","height","width","marginTop","color","makeStyles","theme","borderRadius","display","justifyContent","alignItems","flexDirection","padding","position","top","right","withRouter","match","dispatch","useDispatch","firstUpdate","useRef","useState","acceptedInternal","useSelector","internalReducer","useLayoutEffect","current","status","Snackbar","data","detail","autoHideDuration","setAcceptedTransferData","anchorOrigin","vertical","horizontal","Alert","severity","Container","initialValues","security_code","onSubmit","values","acceptInternal","params","id","handleChange","Box","fontWeight","TextField","error","message","helperText","type","label","name","value","onChange","input","size","button","backgroundColor","margin","breakpoints","down"],"mappings":"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","file":"static/js/46.a395b4bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/success.5041dbb9.svg\";","import {\n  Button,\n  Dialog,\n  DialogContent,\n  IconButton,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport close from \"../../../assets/images/state/close.svg\";\nimport successIcon from \"../../../assets/images/state/success.svg\";\n\nconst DialogSuccess = ({ success, setSuccess, t }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Dialog\n      open={success}\n      onClose={() => {\n        setSuccess(false);\n        history.push(\"/dashboard/reviews/leave\");\n      }}\n      scroll=\"body\"\n      classes={{ paper: classes.paper }}\n    >\n      <DialogContent className={classes.dialogContent}>\n        <IconButton\n          aria-label=\"close\"\n          onClick={() => {\n            setSuccess(false);\n          }}\n          className={classes.close}\n        >\n          <img src={close} alt=\"\" />\n        </IconButton>\n        <img src={successIcon} style={{ marginBottom: 30 }} alt=\"\" />\n        <Typography variant=\"h2\" style={{ maxWidth: 439, textAlign: \"center\" }}>\n          {t(\"fundsReceivedSuccessMessage\")}\n        </Typography>\n        <Button\n          onClick={() => {\n            setSuccess(false);\n            history.push(\"/dashboard/history\");\n          }}\n          variant=\"contained\"\n          style={{ height: 56, width: \"100%\", marginTop: 24 }}\n          color=\"secondary\"\n        >\n          {t(\"ok\")}\n        </Button>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default DialogSuccess;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    borderRadius: 16,\n    width: \"100%\",\n  },\n\n  dialogContent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"40px!important\",\n  },\n\n  close: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n  },\n}));\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  Container,\n  makeStyles,\n  Typography,\n  TextField,\n  Button,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { Box } from \"@mui/system\";\nimport { Form, Formik } from \"formik\";\nimport { MediumTitle } from \"../../../shared/Typography\";\nimport Dialog from \"./Dialog\";\nimport { withRouter } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  acceptInternal,\n  setAcceptedTransferData,\n} from \"../../../redux/reducers/internal\";\nimport { Alert } from \"@mui/material\";\n\nconst GetMoney = ({ t, match }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const firstUpdate = useRef(true);\n  const [success, setSuccess] = useState(false);\n\n  const { acceptedInternal } = useSelector(\n    ({ internalReducer }) => internalReducer\n  );\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    if (acceptedInternal?.status === 202) {\n      setSuccess(true);\n    }\n\n    // eslint-disable-next-line\n  }, [acceptedInternal]);\n\n  return (\n    <section style={{ color: \"#191D23\" }}>\n      <Snackbar\n        open={\n          acceptedInternal?.data?.detail !== \"SUCCESS\"\n            ? acceptedInternal?.data?.detail\n            : \"\"\n        }\n        autoHideDuration={3000}\n        onClose={() => {\n          dispatch(setAcceptedTransferData(null));\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert severity=\"error\" color=\"error\" variant=\"filled\">\n          {acceptedInternal?.data?.detail}\n        </Alert>\n      </Snackbar>\n      <Container maxWidth=\"lg\">\n        <Formik\n          initialValues={{ security_code: \"\" }}\n          onSubmit={(values) =>\n            dispatch(acceptInternal(match.params.id, values))\n          }\n        >\n          {({ values, handleChange }) => (\n            <Form>\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n              >\n                <Typography variant=\"h3\" style={{ marginBottom: 16 }}>\n                  {t(\"getFunds\")}\n                </Typography>\n                <Typography\n                  variant=\"h5\"\n                  style={{ marginBottom: 24, fontWeight: \"300\" }}\n                >\n                  {t(\"getFundsSubtitle\")}\n                </Typography>\n              </Box>\n              <Box>\n                <MediumTitle>{t(\"protectionCode\")}</MediumTitle>\n                <TextField\n                  error={acceptedInternal?.data?.message && true}\n                  helperText={\n                    acceptedInternal?.data?.message &&\n                    `${t(\"invalidProtectionCode\")}`\n                  }\n                  type=\"number\"\n                  label={t(\"enterProtectionCode\")}\n                  variant=\"outlined\"\n                  name=\"security_code\"\n                  value={values.security_code}\n                  onChange={handleChange}\n                  className={classes.input}\n                />\n              </Box>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                type=\"submit\"\n                color=\"primary\"\n                className={classes.button}\n              >\n                {t(\"continue\")}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n      <Dialog success={success} setSuccess={setSuccess} t={t} />\n    </section>\n  );\n};\n\nexport default withRouter(GetMoney);\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    marginTop: 16,\n\n    \"& .MuiOutlinedInput-input\": {\n      backgroundColor: \"#fff\",\n    },\n  },\n\n  button: {\n    margin: \"30px auto\",\n    display: \"block\",\n    [theme.breakpoints.down(992)]: {\n      width: \"100%\",\n    },\n  },\n}));\n"],"sourceRoot":""}